apply plugin: 'com.android.library'
apply from: '../gradle/plugins/checkstyle-android.gradle'
apply from: '../gradle/plugins/findbugs-android.gradle'
apply plugin: 'jacoco'

repositories {
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

ext {
    supportLibraryVersion = '23.1.1'
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${project.supportLibraryVersion}"
    }
}

dependencies {
//    compile project(':k9mail-library')
//    compile project(':plugins:Android-PullToRefresh:library')
//    compile project(':plugins:HoloColorPicker')

    compile 'org.apache.james:apache-mime4j-core:0.7.2'
    compile 'org.apache.james:apache-mime4j-dom:0.7.2'
    compile (name:'k9mail-library-debug',ext:'aar')
    compile (name:'openpgp-api-debug',ext:'aar')
    compile (name:'HoloColorPicker-debug',ext:'aar')
    compile 'com.handmark.pulltorefresh.library:Refineit-pulltorefresh:2.1.1'
    compile 'commons-io:commons-io:2.4'
    compile "com.android.support:support-v4:${project.supportLibraryVersion}"
    compile 'net.sourceforge.htmlcleaner:htmlcleaner:2.16'
    compile 'de.cketti.library.changelog:ckchangelog:1.2.1'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.splitwise:tokenautocomplete:2.0.7'
    compile 'de.cketti.safecontentresolver:safe-content-resolver-v14:0.0.1'
    compile 'com.github.amlcurran.showcaseview:library:5.4.1'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'

    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
//        applicationId "com.fsck.k9"
//        testApplicationId "com.fsck.k9.tests"

        versionCode 23090
        versionName '5.109'

        minSdkVersion 15
        targetSdkVersion 22

        generatedDensities = ['mdpi', 'hdpi', 'xhdpi']

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }

            buildConfigField "boolean", "DEVELOPER_MODE", "false"
        }

        debug {
//            applicationIdSuffix ".debug"
            testCoverageEnabled rootProject.testCoverage

            buildConfigField "boolean", "DEVELOPER_MODE", "true"
        }
    }

    // Do not abort build if lint finds errors
    lintOptions {
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}
if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
